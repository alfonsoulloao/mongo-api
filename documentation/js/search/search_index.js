var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.516,1,1.516]],["body/controllers/AppController.html",[0,2.328,1,2.328,2,1.583,3,0.757,4,0.757,5,0.641,6,2.59,7,0.641,8,1.733,9,3.779,10,2.16,11,0.056,12,1.187,13,3.242,14,1.37,15,1.733,16,1.051,17,0.757,18,1.902,19,2.59,20,2.59,21,1.839,22,3.242,23,0.757,24,0.436,25,2.59,26,2.59,27,1.37,28,3.242,29,0.043,30,0.043]],["title/modules/AppModule.html",[31,1.305,32,1.516]],["body/modules/AppModule.html",[1,2.347,2,1.788,3,0.636,4,0.636,5,0.539,11,0.056,16,1.11,17,0.636,18,2.008,19,2.176,23,0.636,24,0.367,29,0.038,30,0.038,31,2.02,32,2.801,33,1.33,34,1.33,35,1.815,36,1.815,37,1.33,38,2.756,39,1.815,40,2.176,41,2.176,42,2.176,43,2.321,44,2.44,45,1.815,46,1.815,47,2.176,48,2.925,49,1.545,50,1.815,51,1.815,52,2.724,53,2.724,54,2.176,55,1.545,56,1.815,57,2.724,58,2.724,59,2.724,60,2.724,61,2.724,62,2.724,63,2.724]],["title/injectables/AppService.html",[18,1.129,64,0.847]],["body/injectables/AppService.html",[3,0.794,4,0.794,5,0.673,7,0.673,8,1.786,9,3.844,11,0.055,12,1.245,14,1.437,15,1.786,16,0.794,17,0.794,18,1.786,23,0.794,24,0.458,27,1.437,29,0.044,30,0.044,64,1.339,65,1.929,66,2.717,67,3.401,68,2.717,69,2.266,70,3.401,71,2.266,72,3.401,73,3.401,74,3.401]],["title/guards/ApplicationGuardGuard.html",[75,1.781,76,1.516]],["body/guards/ApplicationGuardGuard.html",[3,0.688,4,0.688,5,0.582,7,0.582,8,1.629,11,0.056,12,1.078,14,1.244,16,0.901,17,0.688,23,0.688,24,0.396,27,1.244,29,0.04,30,0.04,64,1.221,76,2.187,77,2.944,78,2.569,79,2.351,80,4.736,81,2.944,82,3.644,83,2.944,84,1.67,85,1.437,86,0.933,87,1.67,88,3.08,89,3.855,90,3.08,91,3.434,92,1.67,93,2.351,94,2.569,95,2.944,96,2.944,97,2.944,98,3.08,99,2.944,100,2.944,101,2.944]],["title/controllers/BundleController.html",[0,1.516,102,1.516]],["body/controllers/BundleController.html",[2,0.624,3,0.299,4,0.299,5,0.253,7,0.253,8,0.879,10,2.384,11,0.056,12,1.31,14,1.511,16,0.836,17,0.299,20,1.021,21,0.725,23,0.299,24,0.172,25,1.021,27,1.511,29,0.022,30,0.022,49,0.725,50,0.852,51,0.852,76,0.725,78,0.852,84,2.03,85,2.088,86,0.659,87,2.03,94,2.384,102,1.181,103,1.021,104,1.279,105,1.481,106,3.759,107,2.081,108,1.662,109,2.081,110,1.662,111,2.081,112,2.666,113,1.279,114,2.102,115,1.841,116,2.081,117,1.279,118,4.276,119,3.578,120,1.279,121,3.484,122,3.032,123,1.279,124,1.279,125,1.279,126,1.279,127,1.279,128,1.279,129,2.081,130,1.279,131,1.279,132,2.422,133,2.422,134,1.279,135,1.279,136,1.279,137,1.279,138,2.631,139,1.279,140,1.279,141,1.279,142,1.279,143,1.279,144,1.021,145,0.879,146,1.021,147,3.578,148,0.725,149,1.279,150,1.279,151,1.279,152,1.279,153,1.279,154,1.279,155,1.279,156,1.279,157,1.279,158,3.578,159,1.765,160,2.858,161,1.279,162,1.279,163,4.065,164,2.631,165,3.771,166,3.578,167,4.362,168,3.578,169,3.578,170,1.279,171,1.279,172,3.032,173,1.279,174,1.279,175,1.279,176,1.279,177,1.279,178,1.279,179,1.279,180,1.279,181,1.279,182,2.631,183,1.493,184,2.631,185,2.631,186,1.279,187,1.279,188,1.279,189,2.081,190,2.631,191,1.279,192,1.279,193,1.279,194,1.279,195,1.279,196,1.279,197,1.279]],["title/modules/BundleModule.html",[31,1.305,43,1.305]],["body/modules/BundleModule.html",[2,1.887,3,0.69,4,0.69,5,0.584,11,0.056,16,1.108,17,0.69,23,0.69,24,0.398,29,0.041,30,0.041,31,2.103,33,1.443,34,1.443,35,1.969,36,1.969,37,1.443,38,2.87,39,1.969,43,2.375,44,2.575,45,1.969,46,1.969,48,2.36,54,2.36,55,1.676,85,1.443,102,2.444,105,1.443,145,2.055,146,2.36,198,2.36,199,2.36,200,2.955,201,2.955,202,2.575,203,2.955,204,2.955,205,2.36]],["title/injectables/BundleService.html",[64,0.847,145,1.129]],["body/injectables/BundleService.html",[3,0.398,4,0.398,5,0.337,7,0.337,8,1.102,11,0.056,12,1.542,14,1.71,15,2.048,16,0.896,17,0.398,23,0.398,24,0.229,26,1.359,27,1.71,29,0.027,30,0.027,64,0.827,65,0.965,84,2.296,85,1.976,86,1.282,87,2.296,90,3.749,94,2.696,106,3.96,108,2.084,110,2.841,112,2.841,114,3.064,115,2.057,121,2.841,132,2.084,133,2.841,144,1.359,145,1.102,159,1.503,160,3.365,183,1.48,206,1.359,207,2.609,208,2.609,209,2.609,210,2.609,211,1.702,212,3.557,213,1.702,214,2.609,215,2.609,216,1.702,217,2.609,218,1.702,219,2.609,220,1.702,221,1.702,222,2.609,223,1.702,224,2.609,225,1.702,226,0.965,227,1.702,228,1.702,229,1.702,230,1.702,231,1.702,232,3.557,233,2.609,234,0.965,235,1.702,236,1.702,237,1.702,238,1.702,239,1.702,240,2.609,241,1.702,242,1.702,243,1.702]],["title/interfaces/LogBundle.html",[159,1.129,244,1.516]],["body/interfaces/LogBundle.html",[3,0.715,4,0.715,5,0.605,7,0.605,11,0.055,15,2.219,16,0.715,23,0.715,29,0.042,30,0.042,86,1.519,105,2.261,159,1.671,226,1.737,234,2.627,244,1.737,245,3.061,246,2.445,247,3.955,248,4.381,249,2.244,250,3.086,251,2.919,252,2.919,253,2.445,254,2.445]],["title/classes/LogBundleDto.html",[24,0.36,115,1.305]],["body/classes/LogBundleDto.html",[3,0.619,4,0.619,5,0.524,7,0.524,10,3.046,11,0.056,12,1.674,15,2.073,16,0.839,21,1.503,23,0.619,24,0.484,29,0.038,30,0.038,49,1.503,50,1.765,51,1.765,86,1.448,105,1.991,115,1.755,234,2.314,249,2.039,250,2.717,251,2.394,252,2.394,253,2.116,254,2.116,255,2.649,256,2.116,257,3.593,258,2.649,259,2.649,260,2.649,261,2.649,262,3.593,263,2.649,264,2.649,265,2.649,266,2.649,267,2.649,268,4.714,269,4.714,270,2.649,271,2.116,272,2.649,273,2.649,274,2.649]],["title/injectables/LoggerInterceptor.html",[64,0.847,148,1.516]],["body/injectables/LoggerInterceptor.html",[3,0.73,4,0.73,5,0.618,7,0.618,8,1.693,11,0.055,12,1.144,14,1.32,16,0.936,17,0.73,23,0.73,24,0.42,27,1.32,29,0.042,30,0.042,64,1.269,65,1.772,82,3.727,84,1.772,85,1.525,86,0.99,87,1.772,88,2.495,91,3.533,92,1.772,93,2.495,148,2.273,275,2.495,276,4.007,277,4.007,278,4.423,279,4.666,280,3.124,281,4.007,282,3.124,283,3.124,284,3.124]],["title/coverage.html",[285,2.888]],["body/coverage.html",[0,2.187,1,1.67,5,0.582,6,2.351,11,0.055,18,1.244,24,0.396,29,0.04,30,0.04,37,1.437,56,1.961,64,1.362,66,2.351,75,1.961,76,1.67,78,1.961,79,2.351,86,0.933,102,1.67,103,2.351,115,1.437,145,1.244,148,1.67,159,1.244,183,1.67,202,1.961,206,2.351,244,1.67,246,2.351,256,2.351,275,2.351,285,2.351,286,2.944,287,2.944,288,2.944,289,5.164,290,4.562,291,2.944,292,2.944,293,3.855,294,2.351,295,3.855,296,4.299,297,2.351,298,2.351,299,2.944,300,2.944,301,2.944]],["title/dependencies.html",[34,1.565,302,1.795]],["body/dependencies.html",[11,0.056,17,0.798,21,1.938,24,0.571,29,0.045,30,0.045,34,1.668,55,1.938,92,1.938,226,1.938,271,2.729,303,4.61,304,2.729,305,3.416,306,2.729,307,3.386,308,3.416,309,3.416,310,3.416,311,3.416,312,3.416,313,3.416,314,3.416,315,3.416,316,3.416,317,3.416,318,3.416,319,3.416]],["title/miscellaneous/functions.html",[320,1.275,321,2.56]],["body/miscellaneous/functions.html",[7,0.788,11,0.049,29,0.049,30,0.049,37,2.405,298,3.182,320,2.26,321,3.182,322,3.984]],["title/index.html",[7,0.444,323,2.247,324,2.247]],["body/index.html",[11,0.02,17,0.262,29,0.02,30,0.02,47,1.492,49,1.588,55,0.636,68,3.474,69,2.898,71,1.865,92,0.636,226,0.636,304,0.896,306,0.896,307,0.896,325,4.414,326,2.401,327,3.561,328,3.358,329,4.414,330,2.845,331,3.358,332,1.492,333,1.122,334,3.873,335,3.968,336,1.122,337,2.401,338,1.122,339,1.492,340,1.918,341,1.122,342,1.122,343,1.122,344,1.122,345,1.122,346,1.122,347,1.868,348,1.868,349,1.868,350,1.122,351,1.122,352,1.122,353,1.122,354,1.868,355,1.868,356,1.122,357,1.122,358,1.868,359,1.122,360,1.868,361,1.868,362,1.122,363,1.868,364,4.473,365,4.696,366,2.401,367,1.122,368,1.122,369,1.122,370,1.122,371,1.122,372,1.122,373,1.122,374,1.122,375,1.122,376,1.122,377,2.401,378,1.122,379,1.918,380,1.122,381,3.358,382,1.122,383,1.122,384,4.195,385,3.11,386,1.122,387,2.401,388,4.195,389,3.11,390,1.492,391,0.896,392,0.896,393,1.868,394,1.122,395,1.122,396,1.122,397,1.122,398,2.401,399,1.122,400,1.868,401,1.868,402,1.122,403,1.868,404,1.122,405,2.401,406,1.868,407,3.873,408,1.122,409,1.122,410,1.122,411,1.122,412,2.401,413,2.401,414,2.8,415,1.122,416,2.401,417,3.11,418,1.868,419,1.122,420,3.11,421,1.868,422,1.868,423,2.401,424,1.868,425,1.122,426,1.122,427,1.868,428,3.873,429,3.11,430,1.122,431,1.122,432,1.122,433,1.122,434,1.122,435,1.122,436,1.122,437,1.122,438,1.122,439,1.122,440,1.122,441,1.868,442,1.122,443,2.401,444,1.868,445,1.868,446,1.868,447,1.122,448,1.122,449,1.122,450,1.868,451,1.122,452,1.122,453,1.122,454,1.122,455,1.122,456,1.122,457,1.122,458,2.401,459,1.122,460,1.122,461,1.122,462,1.122,463,1.122,464,1.122,465,3.11,466,1.122,467,1.122,468,1.122,469,1.122,470,1.868,471,1.122,472,1.122,473,1.122,474,1.868,475,1.122,476,1.122,477,1.122,478,1.122,479,1.122,480,2.401,481,1.122,482,1.122,483,1.122,484,1.122,485,1.122,486,1.122,487,1.868,488,1.868,489,1.122,490,1.122,491,1.122,492,1.122,493,1.868,494,1.122,495,1.868,496,1.122,497,1.122,498,1.122,499,1.122,500,1.122,501,1.868,502,1.122,503,1.122,504,1.122,505,0.896,506,1.122,507,1.122,508,1.122,509,1.122,510,1.122,511,1.122,512,1.122,513,1.122,514,1.122,515,1.122,516,1.122,517,1.122,518,1.122]],["title/modules.html",[33,1.765]],["body/modules.html",[11,0.048,29,0.048,30,0.048,32,2.225,33,1.915,43,1.915,519,4.609,520,4.609,521,4.609,522,4.609]],["title/overview.html",[523,2.888]],["body/overview.html",[2,1.604,11,0.051,18,1.913,24,0.442,29,0.043,30,0.043,31,1.604,32,2.837,33,1.604,34,1.604,35,2.188,36,2.188,37,1.604,38,2.188,39,2.188,40,2.623,41,2.623,42,2.623,43,2.392,44,2.756,45,2.188,46,2.188,65,1.863,75,2.188,145,1.913,198,2.623,199,2.623,244,1.863,523,2.623,524,4.136,525,3.284,526,4.528]],["title/properties.html",[249,1.818,302,1.795]],["body/properties.html",[11,0.055,29,0.048,30,0.048,249,2.225,505,3.134,527,3.923,528,3.923,529,3.923,530,3.923,531,3.923]],["title/miscellaneous/variables.html",[320,1.275,532,2.56]],["body/miscellaneous/variables.html",[7,0.431,11,0.055,15,1.798,29,0.033,30,0.033,56,2.09,69,3.114,71,2.09,86,1.404,98,2.506,105,1.065,159,0.922,183,1.237,202,2.09,205,1.742,234,1.237,250,1.453,251,1.453,252,1.453,294,1.742,297,1.742,320,1.237,330,3.4,332,2.506,335,4.065,339,3.734,340,3.734,379,3.21,390,2.506,391,2.506,392,2.506,532,1.742,533,2.181,534,2.181,535,2.181,536,3.137,537,3.137,538,3.137,539,4.433,540,4.018,541,3.137,542,3.137,543,3.137,544,4.018,545,2.181,546,3.137,547,3.137,548,3.137,549,3.137,550,3.137,551,2.181,552,3.674,553,3.674,554,3.137,555,2.181,556,2.181,557,2.181,558,2.181,559,4.257]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/ApplicationGuardGuard.html":{},"controllers/BundleController.html":{},"modules/BundleModule.html":{},"injectables/BundleService.html":{},"interfaces/LogBundle.html":{},"classes/LogBundleDto.html":{},"injectables/LoggerInterceptor.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":289,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":528,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":315,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":311,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":310,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":296,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":290,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":293,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":291,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":292,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":526,"title":{},"body":{"overview.html":{}}}],["10.0.0",{"_index":303,"title":{},"body":{"dependencies.html":{}}}],["10.0.1",{"_index":305,"title":{},"body":{"dependencies.html":{}}}],["15",{"_index":266,"title":{},"body":{"classes/LogBundleDto.html":{}}}],["172.20.6.73",{"_index":545,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2",{"_index":524,"title":{},"body":{"overview.html":{}}}],["20",{"_index":262,"title":{},"body":{"classes/LogBundleDto.html":{}}}],["27017",{"_index":553,"title":{},"body":{"miscellaneous/variables.html":{}}}],["27020",{"_index":557,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3",{"_index":525,"title":{},"body":{"overview.html":{}}}],["3000",{"_index":558,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.0.0",{"_index":319,"title":{},"body":{"dependencies.html":{}}}],["7.1.6",{"_index":308,"title":{},"body":{"dependencies.html":{}}}],["7.4.1",{"_index":312,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":316,"title":{},"body":{"dependencies.html":{}}}],["actualizar",{"_index":344,"title":{},"body":{"index.html":{}}}],["actualmente",{"_index":504,"title":{},"body":{"index.html":{}}}],["adecuadamente",{"_index":508,"title":{},"body":{"index.html":{}}}],["agent",{"_index":100,"title":{},"body":{"guards/ApplicationGuardGuard.html":{}}}],["agregar",{"_index":73,"title":{},"body":{"injectables/AppService.html":{}}}],["al",{"_index":377,"title":{},"body":{"index.html":{}}}],["alguna",{"_index":513,"title":{},"body":{"index.html":{}}}],["antes",{"_index":358,"title":{},"body":{"index.html":{}}}],["api",{"_index":325,"title":{},"body":{"index.html":{}}}],["api/swagger",{"_index":74,"title":{},"body":{"injectables/AppService.html":{}}}],["apiparam",{"_index":147,"title":{},"body":{"controllers/BundleController.html":{}}}],["apiparam({name",{"_index":122,"title":{},"body":{"controllers/BundleController.html":{}}}],["apiproperty",{"_index":268,"title":{},"body":{"classes/LogBundleDto.html":{}}}],["apiproperty()@isnotempty",{"_index":257,"title":{},"body":{"classes/LogBundleDto.html":{}}}],["apiproperty()@isnotempty()@length(10",{"_index":261,"title":{},"body":{"classes/LogBundleDto.html":{}}}],["apiproperty()@isnotempty()@length(20",{"_index":259,"title":{},"body":{"classes/LogBundleDto.html":{}}}],["apiproperty()@isnotempty()@length(5",{"_index":265,"title":{},"body":{"classes/LogBundleDto.html":{}}}],["apitags",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"controllers/BundleController.html":{}}}],["apitags('inicio",{"_index":22,"title":{},"body":{"controllers/AppController.html":{}}}],["apitags('logs",{"_index":151,"title":{},"body":{"controllers/BundleController.html":{}}}],["aplicaciones",{"_index":449,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applicationguardguard",{"_index":76,"title":{"guards/ApplicationGuardGuard.html":{}},"body":{"guards/ApplicationGuardGuard.html":{},"controllers/BundleController.html":{},"coverage.html":{}}}],["appmodule",{"_index":32,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["archivo",{"_index":389,"title":{},"body":{"index.html":{}}}],["asegúrate",{"_index":360,"title":{},"body":{"index.html":{}}}],["async",{"_index":106,"title":{},"body":{"controllers/BundleController.html":{},"injectables/BundleService.html":{}}}],["author",{"_index":531,"title":{},"body":{"properties.html":{}}}],["automático",{"_index":422,"title":{},"body":{"index.html":{}}}],["autor",{"_index":518,"title":{},"body":{"index.html":{}}}],["await",{"_index":160,"title":{},"body":{"controllers/BundleController.html":{},"injectables/BundleService.html":{}}}],["base",{"_index":339,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["biblioteca",{"_index":478,"title":{},"body":{"index.html":{}}}],["body",{"_index":157,"title":{},"body":{"controllers/BundleController.html":{}}}],["boolean",{"_index":89,"title":{},"body":{"guards/ApplicationGuardGuard.html":{}}}],["bootstrap",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"modules/BundleModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":522,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":519,"title":{},"body":{"modules.html":{}}}],["build",{"_index":408,"title":{},"body":{"index.html":{}}}],["bundle",{"_index":105,"title":{},"body":{"controllers/BundleController.html":{},"modules/BundleModule.html":{},"interfaces/LogBundle.html":{},"classes/LogBundleDto.html":{},"miscellaneous/variables.html":{}}}],["bundle.controller",{"_index":201,"title":{},"body":{"modules/BundleModule.html":{}}}],["bundle.service",{"_index":146,"title":{},"body":{"controllers/BundleController.html":{},"modules/BundleModule.html":{}}}],["bundle/bundle.module",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["bundlecontroller",{"_index":102,"title":{"controllers/BundleController.html":{}},"body":{"controllers/BundleController.html":{},"modules/BundleModule.html":{},"coverage.html":{}}}],["bundlemodel",{"_index":214,"title":{},"body":{"injectables/BundleService.html":{}}}],["bundlemodule",{"_index":43,"title":{"modules/BundleModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BundleModule.html":{},"modules.html":{},"overview.html":{}}}],["bundleservice",{"_index":145,"title":{"injectables/BundleService.html":{}},"body":{"controllers/BundleController.html":{},"modules/BundleModule.html":{},"injectables/BundleService.html":{},"coverage.html":{},"overview.html":{}}}],["callhandler",{"_index":279,"title":{},"body":{"injectables/LoggerInterceptor.html":{}}}],["cambios",{"_index":424,"title":{},"body":{"index.html":{}}}],["canactivate",{"_index":80,"title":{},"body":{"guards/ApplicationGuardGuard.html":{}}}],["canactivate(context",{"_index":81,"title":{},"body":{"guards/ApplicationGuardGuard.html":{}}}],["catch",{"_index":166,"title":{},"body":{"controllers/BundleController.html":{}}}],["class",{"_index":24,"title":{"classes/LogBundleDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/ApplicationGuardGuard.html":{},"controllers/BundleController.html":{},"modules/BundleModule.html":{},"injectables/BundleService.html":{},"classes/LogBundleDto.html":{},"injectables/LoggerInterceptor.html":{},"coverage.html":{},"dependencies.html":{},"overview.html":{}}}],["classes",{"_index":255,"title":{},"body":{"classes/LogBundleDto.html":{}}}],["clona",{"_index":372,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_bundlemodule",{"_index":198,"title":{},"body":{"modules/BundleModule.html":{},"overview.html":{}}}],["cluster_bundlemodule_providers",{"_index":199,"title":{},"body":{"modules/BundleModule.html":{},"overview.html":{}}}],["cobertura",{"_index":435,"title":{},"body":{"index.html":{}}}],["comando",{"_index":488,"title":{},"body":{"index.html":{}}}],["comenzar",{"_index":359,"title":{},"body":{"index.html":{}}}],["como",{"_index":338,"title":{},"body":{"index.html":{}}}],["compila",{"_index":409,"title":{},"body":{"index.html":{}}}],["compilador",{"_index":485,"title":{},"body":{"index.html":{}}}],["componentes",{"_index":447,"title":{},"body":{"index.html":{}}}],["con",{"_index":327,"title":{},"body":{"index.html":{}}}],["config",{"_index":472,"title":{},"body":{"index.html":{}}}],["configura",{"_index":399,"title":{},"body":{"index.html":{}}}],["configuración",{"_index":387,"title":{},"body":{"index.html":{}}}],["configurada",{"_index":394,"title":{},"body":{"index.html":{}}}],["configurar",{"_index":354,"title":{},"body":{"index.html":{}}}],["console.log('interceptor",{"_index":282,"title":{},"body":{"injectables/LoggerInterceptor.html":{}}}],["console.log(req.headers",{"_index":97,"title":{},"body":{"guards/ApplicationGuardGuard.html":{}}}],["const",{"_index":94,"title":{},"body":{"guards/ApplicationGuardGuard.html":{},"controllers/BundleController.html":{},"injectables/BundleService.html":{}}}],["construcción",{"_index":448,"title":{},"body":{"index.html":{}}}],["constructor",{"_index":210,"title":{},"body":{"injectables/BundleService.html":{}}}],["constructor(bundlemodel",{"_index":211,"title":{},"body":{"injectables/BundleService.html":{}}}],["constructor(private",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"controllers/BundleController.html":{}}}],["contacto",{"_index":517,"title":{},"body":{"index.html":{}}}],["context",{"_index":88,"title":{},"body":{"guards/ApplicationGuardGuard.html":{},"injectables/LoggerInterceptor.html":{}}}],["context.getargbyindex(0",{"_index":96,"title":{},"body":{"guards/ApplicationGuardGuard.html":{}}}],["continuación",{"_index":349,"title":{},"body":{"index.html":{}}}],["contraseña",{"_index":543,"title":{},"body":{"miscellaneous/variables.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/BundleController.html":{}},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["controller('bundle",{"_index":154,"title":{},"body":{"controllers/BundleController.html":{}}}],["controller,post,res,httpstatus,body,get,notfoundexception,param,delete,query,put",{"_index":141,"title":{},"body":{"controllers/BundleController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/BundleController.html":{},"modules/BundleModule.html":{},"overview.html":{}}}],["corregir",{"_index":437,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":285,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creado",{"_index":336,"title":{},"body":{"index.html":{}}}],["crear",{"_index":342,"title":{},"body":{"index.html":{}}}],["createlogbondledto",{"_index":138,"title":{},"body":{"controllers/BundleController.html":{}}}],["createlogbundle",{"_index":207,"title":{},"body":{"injectables/BundleService.html":{}}}],["createlogbundle(createlogbundledto",{"_index":215,"title":{},"body":{"injectables/BundleService.html":{}}}],["createlogbundledto",{"_index":114,"title":{},"body":{"controllers/BundleController.html":{},"injectables/BundleService.html":{}}}],["createlogpost",{"_index":107,"title":{},"body":{"controllers/BundleController.html":{}}}],["createlogpost(@res",{"_index":156,"title":{},"body":{"controllers/BundleController.html":{}}}],["createlogpost(res",{"_index":113,"title":{},"body":{"controllers/BundleController.html":{}}}],["credenciales",{"_index":400,"title":{},"body":{"index.html":{}}}],["cuando",{"_index":500,"title":{},"body":{"index.html":{}}}],["código",{"_index":412,"title":{},"body":{"index.html":{}}}],["cómo",{"_index":353,"title":{},"body":{"index.html":{}}}],["database",{"_index":550,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date",{"_index":234,"title":{},"body":{"injectables/BundleService.html":{},"interfaces/LogBundle.html":{},"classes/LogBundleDto.html":{},"miscellaneous/variables.html":{}}}],["datos",{"_index":340,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["de",{"_index":335,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["debe",{"_index":72,"title":{},"body":{"injectables/AppService.html":{}}}],["declarations",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/BundleModule.html":{},"overview.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/BundleController.html":{},"classes/LogBundleDto.html":{}}}],["default",{"_index":536,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defecto",{"_index":392,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/ApplicationGuardGuard.html":{},"controllers/BundleController.html":{},"injectables/BundleService.html":{},"classes/LogBundleDto.html":{},"injectables/LoggerInterceptor.html":{}}}],["del",{"_index":379,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["delete('/delete",{"_index":187,"title":{},"body":{"controllers/BundleController.html":{}}}],["deletedlogbundle",{"_index":240,"title":{},"body":{"injectables/BundleService.html":{}}}],["deletelogbundle",{"_index":108,"title":{},"body":{"controllers/BundleController.html":{},"injectables/BundleService.html":{}}}],["deletelogbundle(@res",{"_index":188,"title":{},"body":{"controllers/BundleController.html":{}}}],["deletelogbundle(logid",{"_index":217,"title":{},"body":{"injectables/BundleService.html":{}}}],["deletelogbundle(res",{"_index":120,"title":{},"body":{"controllers/BundleController.html":{}}}],["dependencias",{"_index":385,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":34,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/BundleModule.html":{},"dependencies.html":{},"overview.html":{}}}],["depuración",{"_index":426,"title":{},"body":{"index.html":{}}}],["desarrollando",{"_index":511,"title":{},"body":{"index.html":{}}}],["desarrollo",{"_index":420,"title":{},"body":{"index.html":{}}}],["describen",{"_index":404,"title":{},"body":{"index.html":{}}}],["description",{"_index":529,"title":{},"body":{"properties.html":{}}}],["destination",{"_index":250,"title":{},"body":{"interfaces/LogBundle.html":{},"classes/LogBundleDto.html":{},"miscellaneous/variables.html":{}}}],["detectar",{"_index":423,"title":{},"body":{"index.html":{}}}],["dirección",{"_index":546,"title":{},"body":{"miscellaneous/variables.html":{}}}],["directorio",{"_index":378,"title":{},"body":{"index.html":{}}}],["disable",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"controllers/BundleController.html":{},"classes/LogBundleDto.html":{}}}],["disfruta",{"_index":510,"title":{},"body":{"index.html":{}}}],["disponible",{"_index":493,"title":{},"body":{"index.html":{}}}],["disponibles",{"_index":406,"title":{},"body":{"index.html":{}}}],["document",{"_index":248,"title":{},"body":{"interfaces/LogBundle.html":{}}}],["documentacion",{"_index":70,"title":{},"body":{"injectables/AppService.html":{}}}],["documentación",{"_index":495,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":286,"title":{},"body":{"coverage.html":{}}}],["donde",{"_index":549,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dto/logbundle.dto",{"_index":144,"title":{},"body":{"controllers/BundleController.html":{},"injectables/BundleService.html":{}}}],["dudes",{"_index":515,"title":{},"body":{"index.html":{}}}],["e",{"_index":167,"title":{},"body":{"controllers/BundleController.html":{}}}],["e2e.json",{"_index":442,"title":{},"body":{"index.html":{}}}],["ejecución",{"_index":398,"title":{},"body":{"index.html":{}}}],["ejecuta",{"_index":381,"title":{},"body":{"index.html":{}}}],["ejecutar",{"_index":355,"title":{},"body":{"index.html":{}}}],["el",{"_index":388,"title":{},"body":{"index.html":{}}}],["eliminar",{"_index":345,"title":{},"body":{"index.html":{}}}],["en",{"_index":365,"title":{},"body":{"index.html":{}}}],["encuentra",{"_index":390,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["end",{"_index":441,"title":{},"body":{"index.html":{}}}],["enddate",{"_index":133,"title":{},"body":{"controllers/BundleController.html":{},"injectables/BundleService.html":{}}}],["enddate'})@get('/logbundlesbydaterange/:startdate/:enddate",{"_index":135,"title":{},"body":{"controllers/BundleController.html":{}}}],["endpoints",{"_index":347,"title":{},"body":{"index.html":{}}}],["environment",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.mongodbdev.database",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["environment.mongodbdev.host",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["environment.mongodbdev.port",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["environments/environment",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["error",{"_index":169,"title":{},"body":{"controllers/BundleController.html":{}}}],["es",{"_index":332,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["eslint",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"controllers/BundleController.html":{},"classes/LogBundleDto.html":{},"index.html":{}}}],["eslint/eslint",{"_index":469,"title":{},"body":{"index.html":{}}}],["eslint/parser",{"_index":471,"title":{},"body":{"index.html":{}}}],["especificada",{"_index":503,"title":{},"body":{"index.html":{}}}],["est",{"_index":393,"title":{},"body":{"index.html":{}}}],["estar",{"_index":492,"title":{},"body":{"index.html":{}}}],["este",{"_index":331,"title":{},"body":{"index.html":{}}}],["estilo",{"_index":439,"title":{},"body":{"index.html":{}}}],["estos",{"_index":370,"title":{},"body":{"index.html":{}}}],["executioncontext",{"_index":82,"title":{},"body":{"guards/ApplicationGuardGuard.html":{},"injectables/LoggerInterceptor.html":{}}}],["exist",{"_index":185,"title":{},"body":{"controllers/BundleController.html":{}}}],["export",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/ApplicationGuardGuard.html":{},"controllers/BundleController.html":{},"modules/BundleModule.html":{},"injectables/BundleService.html":{},"interfaces/LogBundle.html":{},"classes/LogBundleDto.html":{},"injectables/LoggerInterceptor.html":{}}}],["exports",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"modules/BundleModule.html":{},"overview.html":{}}}],["express",{"_index":307,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["extends",{"_index":247,"title":{},"body":{"interfaces/LogBundle.html":{}}}],["externos",{"_index":467,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/ApplicationGuardGuard.html":{},"controllers/BundleController.html":{},"modules/BundleModule.html":{},"injectables/BundleService.html":{},"interfaces/LogBundle.html":{},"classes/LogBundleDto.html":{},"injectables/LoggerInterceptor.html":{},"coverage.html":{}}}],["format",{"_index":410,"title":{},"body":{"index.html":{}}}],["formatea",{"_index":411,"title":{},"body":{"index.html":{}}}],["formateo",{"_index":474,"title":{},"body":{"index.html":{}}}],["framework",{"_index":475,"title":{},"body":{"index.html":{}}}],["function",{"_index":299,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":321,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["genera",{"_index":433,"title":{},"body":{"index.html":{}}}],["get('/:logid",{"_index":178,"title":{},"body":{"controllers/BundleController.html":{}}}],["get('/alllogs",{"_index":129,"title":{},"body":{"controllers/BundleController.html":{}}}],["get('/logbundlesbydaterange/:startdate/:enddate",{"_index":173,"title":{},"body":{"controllers/BundleController.html":{}}}],["getbundle",{"_index":109,"title":{},"body":{"controllers/BundleController.html":{}}}],["getbundle(@res",{"_index":179,"title":{},"body":{"controllers/BundleController.html":{}}}],["getbundle(res",{"_index":125,"title":{},"body":{"controllers/BundleController.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getlogbundle",{"_index":208,"title":{},"body":{"injectables/BundleService.html":{}}}],["getlogbundle(logid",{"_index":219,"title":{},"body":{"injectables/BundleService.html":{}}}],["getlogbundles",{"_index":110,"title":{},"body":{"controllers/BundleController.html":{},"injectables/BundleService.html":{}}}],["getlogbundles(@res",{"_index":170,"title":{},"body":{"controllers/BundleController.html":{}}}],["getlogbundles(res",{"_index":128,"title":{},"body":{"controllers/BundleController.html":{}}}],["getlogbundlesbydaterange",{"_index":209,"title":{},"body":{"injectables/BundleService.html":{}}}],["getlogbundlesbydaterange(startdate",{"_index":222,"title":{},"body":{"injectables/BundleService.html":{}}}],["getting",{"_index":323,"title":{"index.html":{}},"body":{}}],["gte",{"_index":235,"title":{},"body":{"injectables/BundleService.html":{}}}],["guard",{"_index":75,"title":{"guards/ApplicationGuardGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guard.guard",{"_index":150,"title":{},"body":{"controllers/BundleController.html":{}}}],["guard.guard.ts",{"_index":79,"title":{},"body":{"guards/ApplicationGuardGuard.html":{},"coverage.html":{}}}],["guard.guard.ts:7",{"_index":83,"title":{},"body":{"guards/ApplicationGuardGuard.html":{}}}],["guards",{"_index":77,"title":{},"body":{"guards/ApplicationGuardGuard.html":{}}}],["hcc",{"_index":551,"title":{},"body":{"miscellaneous/variables.html":{}}}],["herramienta",{"_index":476,"title":{},"body":{"index.html":{}}}],["herramientas",{"_index":458,"title":{},"body":{"index.html":{}}}],["host",{"_index":544,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http",{"_index":348,"title":{},"body":{"index.html":{}}}],["http://localhost:3000",{"_index":494,"title":{},"body":{"index.html":{}}}],["http://localhost:3000/docs",{"_index":499,"title":{},"body":{"index.html":{}}}],["identifier",{"_index":287,"title":{},"body":{"coverage.html":{}}}],["idservicerequest",{"_index":251,"title":{},"body":{"interfaces/LogBundle.html":{},"classes/LogBundleDto.html":{},"miscellaneous/variables.html":{}}}],["idservicerequest:string",{"_index":254,"title":{},"body":{"interfaces/LogBundle.html":{},"classes/LogBundleDto.html":{}}}],["if(!logbundledeleted",{"_index":192,"title":{},"body":{"controllers/BundleController.html":{}}}],["if(!updatelogbundle",{"_index":197,"title":{},"body":{"controllers/BundleController.html":{}}}],["implements",{"_index":93,"title":{},"body":{"guards/ApplicationGuardGuard.html":{},"injectables/LoggerInterceptor.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/ApplicationGuardGuard.html":{},"controllers/BundleController.html":{},"modules/BundleModule.html":{},"injectables/BundleService.html":{},"interfaces/LogBundle.html":{},"classes/LogBundleDto.html":{},"injectables/LoggerInterceptor.html":{}}}],["imports",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"modules/BundleModule.html":{}}}],["incluyendo",{"_index":496,"title":{},"body":{"index.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/ApplicationGuardGuard.html":{},"controllers/BundleController.html":{},"injectables/BundleService.html":{},"interfaces/LogBundle.html":{},"classes/LogBundleDto.html":{},"injectables/LoggerInterceptor.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indra",{"_index":538,"title":{},"body":{"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/ApplicationGuardGuard.html":{},"controllers/BundleController.html":{},"modules/BundleModule.html":{},"injectables/BundleService.html":{},"interfaces/LogBundle.html":{},"classes/LogBundleDto.html":{},"injectables/LoggerInterceptor.html":{}}}],["información",{"_index":351,"title":{},"body":{"index.html":{}}}],["informes",{"_index":434,"title":{},"body":{"index.html":{}}}],["inicia",{"_index":416,"title":{},"body":{"index.html":{}}}],["iniciada",{"_index":491,"title":{},"body":{"index.html":{}}}],["iniciar",{"_index":486,"title":{},"body":{"index.html":{}}}],["injectable",{"_index":64,"title":{"injectables/AppService.html":{},"injectables/BundleService.html":{},"injectables/LoggerInterceptor.html":{}},"body":{"injectables/AppService.html":{},"guards/ApplicationGuardGuard.html":{},"injectables/BundleService.html":{},"injectables/LoggerInterceptor.html":{},"coverage.html":{}}}],["injectables",{"_index":65,"title":{},"body":{"injectables/AppService.html":{},"injectables/BundleService.html":{},"injectables/LoggerInterceptor.html":{},"overview.html":{}}}],["injectmodel",{"_index":227,"title":{},"body":{"injectables/BundleService.html":{}}}],["injectmodel('bundle",{"_index":230,"title":{},"body":{"injectables/BundleService.html":{}}}],["instalación",{"_index":357,"title":{},"body":{"index.html":{}}}],["instalado",{"_index":362,"title":{},"body":{"index.html":{}}}],["instalar",{"_index":383,"title":{},"body":{"index.html":{}}}],["install",{"_index":382,"title":{},"body":{"index.html":{}}}],["instancia",{"_index":397,"title":{},"body":{"index.html":{}}}],["interactuar",{"_index":451,"title":{},"body":{"index.html":{}}}],["intercept",{"_index":276,"title":{},"body":{"injectables/LoggerInterceptor.html":{}}}],["intercept(context",{"_index":277,"title":{},"body":{"injectables/LoggerInterceptor.html":{}}}],["interface",{"_index":244,"title":{"interfaces/LogBundle.html":{}},"body":{"interfaces/LogBundle.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":245,"title":{},"body":{"interfaces/LogBundle.html":{}}}],["interfaces/logbundle.interface",{"_index":229,"title":{},"body":{"injectables/BundleService.html":{}}}],["ip",{"_index":547,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isnotempty",{"_index":269,"title":{},"body":{"classes/LogBundleDto.html":{}}}],["jahgai4veith3ie2",{"_index":542,"title":{},"body":{"miscellaneous/variables.html":{}}}],["javascript",{"_index":454,"title":{},"body":{"index.html":{}}}],["jest",{"_index":429,"title":{},"body":{"index.html":{}}}],["la",{"_index":69,"title":{},"body":{"injectables/AppService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["las",{"_index":384,"title":{},"body":{"index.html":{}}}],["leer",{"_index":343,"title":{},"body":{"index.html":{}}}],["legend",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/BundleModule.html":{},"overview.html":{}}}],["length",{"_index":270,"title":{},"body":{"classes/LogBundleDto.html":{}}}],["length(10",{"_index":274,"title":{},"body":{"classes/LogBundleDto.html":{}}}],["length(20",{"_index":272,"title":{},"body":{"classes/LogBundleDto.html":{}}}],["length(5,15",{"_index":273,"title":{},"body":{"classes/LogBundleDto.html":{}}}],["librería",{"_index":450,"title":{},"body":{"index.html":{}}}],["licencia",{"_index":501,"title":{},"body":{"index.html":{}}}],["license",{"_index":530,"title":{},"body":{"properties.html":{}}}],["lint",{"_index":436,"title":{},"body":{"index.html":{}}}],["linting",{"_index":473,"title":{},"body":{"index.html":{}}}],["loader",{"_index":481,"title":{},"body":{"index.html":{}}}],["local",{"_index":375,"title":{},"body":{"index.html":{}}}],["localhost",{"_index":556,"title":{},"body":{"miscellaneous/variables.html":{}}}],["log",{"_index":165,"title":{},"body":{"controllers/BundleController.html":{}}}],["logbundle",{"_index":159,"title":{"interfaces/LogBundle.html":{}},"body":{"controllers/BundleController.html":{},"injectables/BundleService.html":{},"interfaces/LogBundle.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["logbundle.save",{"_index":239,"title":{},"body":{"injectables/BundleService.html":{}}}],["logbundledeleted",{"_index":190,"title":{},"body":{"controllers/BundleController.html":{}}}],["logbundledto",{"_index":115,"title":{"classes/LogBundleDto.html":{}},"body":{"controllers/BundleController.html":{},"injectables/BundleService.html":{},"classes/LogBundleDto.html":{},"coverage.html":{}}}],["logbundlesbydaterange",{"_index":111,"title":{},"body":{"controllers/BundleController.html":{}}}],["logbundlesbydaterange(@res",{"_index":174,"title":{},"body":{"controllers/BundleController.html":{}}}],["logbundlesbydaterange(res",{"_index":131,"title":{},"body":{"controllers/BundleController.html":{}}}],["logbundleschema",{"_index":202,"title":{},"body":{"modules/BundleModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["logbundleservices",{"_index":155,"title":{},"body":{"controllers/BundleController.html":{}}}],["loggerinterceptor",{"_index":148,"title":{"injectables/LoggerInterceptor.html":{}},"body":{"controllers/BundleController.html":{},"injectables/LoggerInterceptor.html":{},"coverage.html":{}}}],["logid",{"_index":121,"title":{},"body":{"controllers/BundleController.html":{},"injectables/BundleService.html":{}}}],["logid'})@delete('/delete",{"_index":123,"title":{},"body":{"controllers/BundleController.html":{}}}],["logid'})@get('/:logid",{"_index":126,"title":{},"body":{"controllers/BundleController.html":{}}}],["logid'})@put('/updatelog",{"_index":139,"title":{},"body":{"controllers/BundleController.html":{}}}],["logsbundle",{"_index":232,"title":{},"body":{"injectables/BundleService.html":{}}}],["los",{"_index":405,"title":{},"body":{"index.html":{}}}],["lte",{"_index":236,"title":{},"body":{"injectables/BundleService.html":{}}}],["luego",{"_index":368,"title":{},"body":{"index.html":{}}}],["matching",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/ApplicationGuardGuard.html":{},"controllers/BundleController.html":{},"modules/BundleModule.html":{},"injectables/BundleService.html":{},"interfaces/LogBundle.html":{},"classes/LogBundleDto.html":{},"injectables/LoggerInterceptor.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["mediante",{"_index":346,"title":{},"body":{"index.html":{}}}],["message",{"_index":163,"title":{},"body":{"controllers/BundleController.html":{}}}],["metadata",{"_index":314,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/ApplicationGuardGuard.html":{},"controllers/BundleController.html":{},"injectables/BundleService.html":{},"injectables/LoggerInterceptor.html":{}}}],["mirthconnect",{"_index":101,"title":{},"body":{"guards/ApplicationGuardGuard.html":{}}}],["miscellaneous",{"_index":320,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["model",{"_index":212,"title":{},"body":{"injectables/BundleService.html":{}}}],["modo",{"_index":417,"title":{},"body":{"index.html":{}}}],["module",{"_index":31,"title":{"modules/AppModule.html":{},"modules/BundleModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BundleModule.html":{},"overview.html":{}}}],["modules",{"_index":33,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/BundleModule.html":{},"modules.html":{},"overview.html":{}}}],["mongo",{"_index":380,"title":{},"body":{"index.html":{}}}],["mongodb",{"_index":330,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["mongodbdev",{"_index":555,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongoose",{"_index":226,"title":{},"body":{"injectables/BundleService.html":{},"interfaces/LogBundle.html":{},"dependencies.html":{},"index.html":{}}}],["mongoosemodule",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"modules/BundleModule.html":{}}}],["mongoosemodule.forfeature",{"_index":204,"title":{},"body":{"modules/BundleModule.html":{}}}],["mongoosemodule.forroot('mongodb://indra:jahgai4veith3ie2@172.20.6.73:27017/hcc",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["mongoosemodule.forroot(`mongodb",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["mongoosemodule.forroot(`mongodb://${environment.mongodb.user}:${environment.mongodb.password}@${environment.mongodb.host}:${environment.mongodb.port}/${environment.mongodb.database",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["máquina",{"_index":374,"title":{},"body":{"index.html":{}}}],["name",{"_index":85,"title":{},"body":{"guards/ApplicationGuardGuard.html":{},"controllers/BundleController.html":{},"modules/BundleModule.html":{},"injectables/BundleService.html":{},"injectables/LoggerInterceptor.html":{}}}],["navega",{"_index":376,"title":{},"body":{"index.html":{}}}],["necesarias",{"_index":386,"title":{},"body":{"index.html":{}}}],["necesario",{"_index":402,"title":{},"body":{"index.html":{}}}],["nestinterceptor",{"_index":281,"title":{},"body":{"injectables/LoggerInterceptor.html":{}}}],["nestjs",{"_index":328,"title":{},"body":{"index.html":{}}}],["nestjs/cli",{"_index":455,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/ApplicationGuardGuard.html":{},"controllers/BundleController.html":{},"modules/BundleModule.html":{},"injectables/BundleService.html":{},"injectables/LoggerInterceptor.html":{},"dependencies.html":{},"index.html":{}}}],["nestjs/core",{"_index":304,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["nestjs/mongoose",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"modules/BundleModule.html":{},"dependencies.html":{},"index.html":{}}}],["nestjs/mongoose/dist/common",{"_index":228,"title":{},"body":{"injectables/BundleService.html":{}}}],["nestjs/platform",{"_index":306,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["nestjs/schematics",{"_index":456,"title":{},"body":{"index.html":{}}}],["nestjs/swagger",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"controllers/BundleController.html":{},"classes/LogBundleDto.html":{},"dependencies.html":{}}}],["nestjs/testing",{"_index":457,"title":{},"body":{"index.html":{}}}],["new",{"_index":183,"title":{},"body":{"controllers/BundleController.html":{},"injectables/BundleService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":278,"title":{},"body":{"injectables/LoggerInterceptor.html":{}}}],["next.handle",{"_index":284,"title":{},"body":{"injectables/LoggerInterceptor.html":{}}}],["node",{"_index":482,"title":{},"body":{"index.html":{}}}],["node.js",{"_index":363,"title":{},"body":{"index.html":{}}}],["nombre",{"_index":539,"title":{},"body":{"miscellaneous/variables.html":{}}}],["notas",{"_index":506,"title":{},"body":{"index.html":{}}}],["notfoundexception('log",{"_index":184,"title":{},"body":{"controllers/BundleController.html":{}}}],["npm",{"_index":364,"title":{},"body":{"index.html":{}}}],["o",{"_index":548,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object",{"_index":535,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observable",{"_index":91,"title":{},"body":{"guards/ApplicationGuardGuard.html":{},"injectables/LoggerInterceptor.html":{}}}],["observador",{"_index":431,"title":{},"body":{"index.html":{}}}],["optional",{"_index":87,"title":{},"body":{"guards/ApplicationGuardGuard.html":{},"controllers/BundleController.html":{},"injectables/BundleService.html":{},"injectables/LoggerInterceptor.html":{}}}],["out",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"modules/BundleModule.html":{},"overview.html":{}}}],["overview",{"_index":523,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":302,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["paquetes",{"_index":466,"title":{},"body":{"index.html":{}}}],["para",{"_index":68,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["param('enddate",{"_index":176,"title":{},"body":{"controllers/BundleController.html":{}}}],["param('logid",{"_index":180,"title":{},"body":{"controllers/BundleController.html":{}}}],["param('startdate",{"_index":175,"title":{},"body":{"controllers/BundleController.html":{}}}],["parameters",{"_index":84,"title":{},"body":{"guards/ApplicationGuardGuard.html":{},"controllers/BundleController.html":{},"injectables/BundleService.html":{},"injectables/LoggerInterceptor.html":{}}}],["parámetros",{"_index":497,"title":{},"body":{"index.html":{}}}],["pasos",{"_index":371,"title":{},"body":{"index.html":{}}}],["password",{"_index":541,"title":{},"body":{"miscellaneous/variables.html":{}}}],["paths",{"_index":484,"title":{},"body":{"index.html":{}}}],["permite",{"_index":341,"title":{},"body":{"index.html":{}}}],["plugin",{"_index":470,"title":{},"body":{"index.html":{}}}],["poner",{"_index":509,"title":{},"body":{"index.html":{}}}],["ponerte",{"_index":516,"title":{},"body":{"index.html":{}}}],["por",{"_index":391,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["port",{"_index":552,"title":{},"body":{"miscellaneous/variables.html":{}}}],["post('/createlog",{"_index":116,"title":{},"body":{"controllers/BundleController.html":{}}}],["prefix",{"_index":104,"title":{},"body":{"controllers/BundleController.html":{}}}],["pregunta",{"_index":514,"title":{},"body":{"index.html":{}}}],["prettier",{"_index":414,"title":{},"body":{"index.html":{}}}],["prettier/prettier",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"controllers/BundleController.html":{},"classes/LogBundleDto.html":{}}}],["principales",{"_index":443,"title":{},"body":{"index.html":{}}}],["private",{"_index":231,"title":{},"body":{"injectables/BundleService.html":{}}}],["probar",{"_index":356,"title":{},"body":{"index.html":{}}}],["problemas",{"_index":438,"title":{},"body":{"index.html":{}}}],["producción",{"_index":418,"title":{},"body":{"index.html":{}}}],["programación",{"_index":452,"title":{},"body":{"index.html":{}}}],["promise",{"_index":90,"title":{},"body":{"guards/ApplicationGuardGuard.html":{},"injectables/BundleService.html":{}}}],["properties",{"_index":249,"title":{"properties.html":{}},"body":{"interfaces/LogBundle.html":{},"classes/LogBundleDto.html":{},"properties.html":{}}}],["proporciona",{"_index":350,"title":{},"body":{"index.html":{}}}],["providers",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"modules/BundleModule.html":{},"overview.html":{}}}],["proyecto",{"_index":334,"title":{},"body":{"index.html":{}}}],["pruebas",{"_index":428,"title":{},"body":{"index.html":{}}}],["puerto",{"_index":554,"title":{},"body":{"miscellaneous/variables.html":{}}}],["put('/updatelog",{"_index":193,"title":{},"body":{"controllers/BundleController.html":{}}}],["query('logid",{"_index":189,"title":{},"body":{"controllers/BundleController.html":{}}}],["reactiva",{"_index":453,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"injectables/BundleService.html":{}}}],["realizar",{"_index":479,"title":{},"body":{"index.html":{}}}],["recived",{"_index":164,"title":{},"body":{"controllers/BundleController.html":{}}}],["recuerda",{"_index":507,"title":{},"body":{"index.html":{}}}],["reflect",{"_index":313,"title":{},"body":{"dependencies.html":{}}}],["reinicio",{"_index":421,"title":{},"body":{"index.html":{}}}],["repositorio",{"_index":373,"title":{},"body":{"index.html":{}}}],["req",{"_index":95,"title":{},"body":{"guards/ApplicationGuardGuard.html":{}}}],["req.headers['user",{"_index":99,"title":{},"body":{"guards/ApplicationGuardGuard.html":{}}}],["require:true",{"_index":559,"title":{},"body":{"miscellaneous/variables.html":{}}}],["res",{"_index":118,"title":{},"body":{"controllers/BundleController.html":{}}}],["res,@body()createlogbondledto",{"_index":195,"title":{},"body":{"controllers/BundleController.html":{}}}],["res.status(httpstatus.created).json",{"_index":162,"title":{},"body":{"controllers/BundleController.html":{}}}],["res.status(httpstatus.forbidden).json",{"_index":168,"title":{},"body":{"controllers/BundleController.html":{}}}],["res.status(httpstatus.ok).json",{"_index":172,"title":{},"body":{"controllers/BundleController.html":{}}}],["res.status(httpstatus.ok).json(logbundle",{"_index":186,"title":{},"body":{"controllers/BundleController.html":{}}}],["reset",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"modules/BundleModule.html":{},"overview.html":{}}}],["respuestas",{"_index":498,"title":{},"body":{"index.html":{}}}],["rest",{"_index":326,"title":{},"body":{"index.html":{}}}],["results",{"_index":29,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/ApplicationGuardGuard.html":{},"controllers/BundleController.html":{},"modules/BundleModule.html":{},"injectables/BundleService.html":{},"interfaces/LogBundle.html":{},"classes/LogBundleDto.html":{},"injectables/LoggerInterceptor.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/ApplicationGuardGuard.html":{},"controllers/BundleController.html":{},"injectables/BundleService.html":{},"injectables/LoggerInterceptor.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/ApplicationGuardGuard.html":{},"controllers/BundleController.html":{},"injectables/BundleService.html":{},"injectables/LoggerInterceptor.html":{}}}],["run",{"_index":407,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":92,"title":{},"body":{"guards/ApplicationGuardGuard.html":{},"injectables/LoggerInterceptor.html":{},"dependencies.html":{},"index.html":{}}}],["schema",{"_index":205,"title":{},"body":{"modules/BundleModule.html":{},"miscellaneous/variables.html":{}}}],["schema/logbundle.schema",{"_index":203,"title":{},"body":{"modules/BundleModule.html":{}}}],["scripts",{"_index":403,"title":{},"body":{"index.html":{}}}],["se",{"_index":71,"title":{},"body":{"injectables/AppService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["servicio",{"_index":252,"title":{},"body":{"interfaces/LogBundle.html":{},"classes/LogBundleDto.html":{},"miscellaneous/variables.html":{}}}],["servicio:string",{"_index":253,"title":{},"body":{"interfaces/LogBundle.html":{},"classes/LogBundleDto.html":{}}}],["si",{"_index":401,"title":{},"body":{"index.html":{}}}],["sigue",{"_index":369,"title":{},"body":{"index.html":{}}}],["siguiente",{"_index":487,"title":{},"body":{"index.html":{}}}],["siguientes",{"_index":444,"title":{},"body":{"index.html":{}}}],["sistema",{"_index":367,"title":{},"body":{"index.html":{}}}],["sobre",{"_index":352,"title":{},"body":{"index.html":{}}}],["son",{"_index":445,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"guards/ApplicationGuardGuard.html":{},"controllers/BundleController.html":{},"modules/BundleModule.html":{},"injectables/BundleService.html":{},"interfaces/LogBundle.html":{},"classes/LogBundleDto.html":{},"injectables/LoggerInterceptor.html":{}}}],["src/.../environment.ts",{"_index":533,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../logbundle.schema.ts",{"_index":534,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":322,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:11",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["src/app.service.ts",{"_index":66,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":67,"title":{},"body":{"injectables/AppService.html":{}}}],["src/bundle/bundle.controller.ts",{"_index":103,"title":{},"body":{"controllers/BundleController.html":{},"coverage.html":{}}}],["src/bundle/bundle.controller.ts:101",{"_index":140,"title":{},"body":{"controllers/BundleController.html":{}}}],["src/bundle/bundle.controller.ts:18",{"_index":117,"title":{},"body":{"controllers/BundleController.html":{}}}],["src/bundle/bundle.controller.ts:33",{"_index":130,"title":{},"body":{"controllers/BundleController.html":{}}}],["src/bundle/bundle.controller.ts:50",{"_index":136,"title":{},"body":{"controllers/BundleController.html":{}}}],["src/bundle/bundle.controller.ts:66",{"_index":127,"title":{},"body":{"controllers/BundleController.html":{}}}],["src/bundle/bundle.controller.ts:82",{"_index":124,"title":{},"body":{"controllers/BundleController.html":{}}}],["src/bundle/bundle.module.ts",{"_index":200,"title":{},"body":{"modules/BundleModule.html":{}}}],["src/bundle/bundle.service.ts",{"_index":206,"title":{},"body":{"injectables/BundleService.html":{},"coverage.html":{}}}],["src/bundle/bundle.service.ts:11",{"_index":213,"title":{},"body":{"injectables/BundleService.html":{}}}],["src/bundle/bundle.service.ts:16",{"_index":221,"title":{},"body":{"injectables/BundleService.html":{}}}],["src/bundle/bundle.service.ts:21",{"_index":223,"title":{},"body":{"injectables/BundleService.html":{}}}],["src/bundle/bundle.service.ts:29",{"_index":220,"title":{},"body":{"injectables/BundleService.html":{}}}],["src/bundle/bundle.service.ts:34",{"_index":216,"title":{},"body":{"injectables/BundleService.html":{}}}],["src/bundle/bundle.service.ts:39",{"_index":218,"title":{},"body":{"injectables/BundleService.html":{}}}],["src/bundle/bundle.service.ts:44",{"_index":225,"title":{},"body":{"injectables/BundleService.html":{}}}],["src/bundle/dto/logbundle.dto.ts",{"_index":256,"title":{},"body":{"classes/LogBundleDto.html":{},"coverage.html":{}}}],["src/bundle/dto/logbundle.dto.ts:11",{"_index":260,"title":{},"body":{"classes/LogBundleDto.html":{}}}],["src/bundle/dto/logbundle.dto.ts:16",{"_index":267,"title":{},"body":{"classes/LogBundleDto.html":{}}}],["src/bundle/dto/logbundle.dto.ts:21",{"_index":263,"title":{},"body":{"classes/LogBundleDto.html":{}}}],["src/bundle/dto/logbundle.dto.ts:25",{"_index":264,"title":{},"body":{"classes/LogBundleDto.html":{}}}],["src/bundle/dto/logbundle.dto.ts:29",{"_index":258,"title":{},"body":{"classes/LogBundleDto.html":{}}}],["src/bundle/interfaces/logbundle.interface.ts",{"_index":246,"title":{},"body":{"interfaces/LogBundle.html":{},"coverage.html":{}}}],["src/bundle/schema/logbundle.schema.ts",{"_index":294,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":297,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/guards/application",{"_index":78,"title":{},"body":{"guards/ApplicationGuardGuard.html":{},"controllers/BundleController.html":{},"coverage.html":{}}}],["src/main.ts",{"_index":298,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/utils/logger.interceptor",{"_index":149,"title":{},"body":{"controllers/BundleController.html":{}}}],["src/utils/logger.interceptor.ts",{"_index":275,"title":{},"body":{"injectables/LoggerInterceptor.html":{},"coverage.html":{}}}],["src/utils/logger.interceptor.ts:7",{"_index":280,"title":{},"body":{"injectables/LoggerInterceptor.html":{}}}],["start",{"_index":415,"title":{},"body":{"index.html":{}}}],["start:debug",{"_index":425,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":419,"title":{},"body":{"index.html":{}}}],["start:devuna",{"_index":489,"title":{},"body":{"index.html":{}}}],["startdate",{"_index":132,"title":{},"body":{"controllers/BundleController.html":{},"injectables/BundleService.html":{}}}],["startdate'})@apiparam({name",{"_index":134,"title":{},"body":{"controllers/BundleController.html":{}}}],["started",{"_index":324,"title":{"index.html":{}},"body":{}}],["statements",{"_index":288,"title":{},"body":{"coverage.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/BundleService.html":{},"interfaces/LogBundle.html":{},"classes/LogBundleDto.html":{},"miscellaneous/variables.html":{}}}],["supertest",{"_index":477,"title":{},"body":{"index.html":{}}}],["support",{"_index":520,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":521,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":317,"title":{},"body":{"dependencies.html":{}}}],["table",{"_index":301,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":300,"title":{},"body":{"coverage.html":{}}}],["tener",{"_index":361,"title":{},"body":{"index.html":{}}}],["test",{"_index":427,"title":{},"body":{"index.html":{}}}],["test:cov",{"_index":432,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":440,"title":{},"body":{"index.html":{}}}],["test:watch",{"_index":430,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":28,"title":{},"body":{"controllers/AppController.html":{}}}],["this.bundlemodel(createlogbundledto",{"_index":238,"title":{},"body":{"injectables/BundleService.html":{}}}],["this.bundlemodel.find",{"_index":233,"title":{},"body":{"injectables/BundleService.html":{}}}],["this.bundlemodel.findbyid(logid",{"_index":237,"title":{},"body":{"injectables/BundleService.html":{}}}],["this.bundlemodel.findbyidanddelete(logid",{"_index":241,"title":{},"body":{"injectables/BundleService.html":{}}}],["this.bundlemodel.findbyidandupdate",{"_index":242,"title":{},"body":{"injectables/BundleService.html":{}}}],["this.logbundleservices.createlogbundle(createlogbundledto",{"_index":161,"title":{},"body":{"controllers/BundleController.html":{}}}],["this.logbundleservices.deletelogbundle(logid",{"_index":191,"title":{},"body":{"controllers/BundleController.html":{}}}],["this.logbundleservices.getlogbundle(logid",{"_index":181,"title":{},"body":{"controllers/BundleController.html":{}}}],["this.logbundleservices.getlogbundles",{"_index":171,"title":{},"body":{"controllers/BundleController.html":{}}}],["this.logbundleservices.getlogbundlesbydaterange(startdate,enddate",{"_index":177,"title":{},"body":{"controllers/BundleController.html":{}}}],["this.logbundleservices.updatelogbundle(logid",{"_index":196,"title":{},"body":{"controllers/BundleController.html":{}}}],["throw",{"_index":182,"title":{},"body":{"controllers/BundleController.html":{}}}],["tiene",{"_index":502,"title":{},"body":{"index.html":{}}}],["tienes",{"_index":512,"title":{},"body":{"index.html":{}}}],["tipos",{"_index":464,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":309,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":243,"title":{},"body":{"injectables/BundleService.html":{}}}],["try",{"_index":158,"title":{},"body":{"controllers/BundleController.html":{}}}],["ts",{"_index":480,"title":{},"body":{"index.html":{}}}],["tsconfig",{"_index":483,"title":{},"body":{"index.html":{}}}],["tu",{"_index":366,"title":{},"body":{"index.html":{}}}],["type",{"_index":86,"title":{},"body":{"guards/ApplicationGuardGuard.html":{},"controllers/BundleController.html":{},"injectables/BundleService.html":{},"interfaces/LogBundle.html":{},"classes/LogBundleDto.html":{},"injectables/LoggerInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["types/express",{"_index":460,"title":{},"body":{"index.html":{}}}],["types/jest",{"_index":461,"title":{},"body":{"index.html":{}}}],["types/node",{"_index":462,"title":{},"body":{"index.html":{}}}],["types/supertest",{"_index":463,"title":{},"body":{"index.html":{}}}],["typescript",{"_index":465,"title":{},"body":{"index.html":{}}}],["ui",{"_index":318,"title":{},"body":{"dependencies.html":{}}}],["un",{"_index":333,"title":{},"body":{"index.html":{}}}],["una",{"_index":396,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":119,"title":{},"body":{"controllers/BundleController.html":{}}}],["unlicensed",{"_index":505,"title":{},"body":{"index.html":{},"properties.html":{}}}],["updatelogbundle",{"_index":112,"title":{},"body":{"controllers/BundleController.html":{},"injectables/BundleService.html":{}}}],["updatelogbundle(@res",{"_index":194,"title":{},"body":{"controllers/BundleController.html":{}}}],["updatelogbundle(logid",{"_index":224,"title":{},"body":{"injectables/BundleService.html":{}}}],["updatelogbundle(res",{"_index":137,"title":{},"body":{"controllers/BundleController.html":{}}}],["usar",{"_index":395,"title":{},"body":{"index.html":{}}}],["useguards",{"_index":143,"title":{},"body":{"controllers/BundleController.html":{}}}],["useguards(applicationguardguard",{"_index":153,"title":{},"body":{"controllers/BundleController.html":{}}}],["useinterceptors",{"_index":142,"title":{},"body":{"controllers/BundleController.html":{}}}],["useinterceptors(loggerinterceptor",{"_index":152,"title":{},"body":{"controllers/BundleController.html":{}}}],["user",{"_index":98,"title":{},"body":{"guards/ApplicationGuardGuard.html":{},"miscellaneous/variables.html":{}}}],["usuario",{"_index":540,"title":{},"body":{"miscellaneous/variables.html":{}}}],["utilidades",{"_index":459,"title":{},"body":{"index.html":{}}}],["utiliza",{"_index":337,"title":{},"body":{"index.html":{}}}],["utilizadas",{"_index":446,"title":{},"body":{"index.html":{}}}],["utilizados",{"_index":468,"title":{},"body":{"index.html":{}}}],["utilizando",{"_index":413,"title":{},"body":{"index.html":{}}}],["validate",{"_index":283,"title":{},"body":{"injectables/LoggerInterceptor.html":{}}}],["validator",{"_index":271,"title":{},"body":{"classes/LogBundleDto.html":{},"dependencies.html":{}}}],["value",{"_index":537,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":295,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":532,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":527,"title":{},"body":{"properties.html":{}}}],["vez",{"_index":490,"title":{},"body":{"index.html":{}}}],["y",{"_index":329,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/BundleModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('inicio')\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nBundleModule\n\nBundleModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nBundleModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            BundleModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /* eslint-disable prettier/prettier */\nimport { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { BundleModule } from './bundle/bundle.module';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { environment } from './environments/environment';\n\n@Module({\n  imports: [\n    BundleModule,\n    //MongooseModule.forRoot(`mongodb://${ environment.mongodbDev.host }:${ environment.mongodbDev.port}/${ environment.mongodbDev.database }`),    \n    //MongooseModule.forRoot('mongodb://indra:jahgai4veith3ie2@172.20.6.73:27017/hcc'),\n    MongooseModule.forRoot(`mongodb://${environment.mongodb.user}:${environment.mongodb.password}@${environment.mongodb.host}:${environment.mongodb.port}/${environment.mongodb.database}`),\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Para la Documentacion se debe agregar : /api/swagger';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/ApplicationGuardGuard.html":{"url":"guards/ApplicationGuardGuard.html","title":"guard - ApplicationGuardGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    ApplicationGuardGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/guards/application-guard.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/guards/application-guard.guard.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | Promise | Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { CanActivate, ExecutionContext, Injectable } from '@nestjs/common';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class ApplicationGuardGuard implements CanActivate {\n  canActivate(\n    context: ExecutionContext,\n  ): boolean | Promise | Observable {\n\n    const req = context.getArgByIndex(0)\n\n    console.log(req.headers)\n\n    const user = req.headers['user-agent']\n    return (user == 'mirthconnect');\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/BundleController.html":{"url":"controllers/BundleController.html","title":"controller - BundleController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  BundleController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/bundle/bundle.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                bundle\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                createLogPost\n                            \n                            \n                                    \n                                    \n                                    Async\n                                deleteLogBundle\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getBundle\n                            \n                            \n                                    \n                                    Async\n                                getLogBundles\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                logBundlesByDateRange\n                            \n                            \n                                    \n                                    \n                                    Async\n                                updateLogBundle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        createLogPost\n                        \n                    \n                \n            \n            \n                \n                    \n                    createLogPost(res, createLogBundleDto: LogBundleDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/createLog')\n                \n            \n\n            \n                \n                    Defined in src/bundle/bundle.controller.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createLogBundleDto\n                                    \n                                                LogBundleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        deleteLogBundle\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteLogBundle(res, logId)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiParam({name: 'logId'})@Delete('/delete')\n                \n            \n\n            \n                \n                    Defined in src/bundle/bundle.controller.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    logId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        getBundle\n                        \n                    \n                \n            \n            \n                \n                    \n                    getBundle(res, logId)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiParam({name: 'logId'})@Get('/:logId')\n                \n            \n\n            \n                \n                    Defined in src/bundle/bundle.controller.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    logId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        getLogBundles\n                        \n                    \n                \n            \n            \n                \n                    \n                    getLogBundles(res)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/allLogs')\n                \n            \n\n            \n                \n                    Defined in src/bundle/bundle.controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        logBundlesByDateRange\n                        \n                    \n                \n            \n            \n                \n                    \n                    logBundlesByDateRange(res, startDate, endDate)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiParam({name: 'startDate'})@ApiParam({name: 'endDate'})@Get('/logBundlesByDateRange/:startDate/:endDate')\n                \n            \n\n            \n                \n                    Defined in src/bundle/bundle.controller.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    startDate\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    endDate\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        updateLogBundle\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateLogBundle(res, createLogBondleDto: LogBundleDto, logId)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiParam({name: 'logId'})@Put('/updateLog')\n                \n            \n\n            \n                \n                    Defined in src/bundle/bundle.controller.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createLogBondleDto\n                                    \n                                                LogBundleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    logId\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        /* eslint-disable prettier/prettier */\nimport { Controller,Post,Res,HttpStatus,Body,Get,NotFoundException,Param,Delete,Query,Put, UseInterceptors, UseGuards,\n} from '@nestjs/common';\nimport { LogBundleDto } from './dto/logBundle.dto';\nimport { BundleService } from './bundle.service';\nimport { ApiParam, ApiTags } from '@nestjs/swagger';\nimport { LoggerInterceptor } from 'src/utils/logger.interceptor';\nimport { ApplicationGuardGuard } from 'src/guards/application-guard.guard';\n\n@ApiTags('Logs')\n@UseInterceptors(LoggerInterceptor)\n@UseGuards(ApplicationGuardGuard)\n@Controller('bundle')\nexport class BundleController {\n  constructor(private logBundleServices: BundleService) {}\n\n  @Post('/createLog')\n  async createLogPost(@Res() res, @Body() createLogBundleDto: LogBundleDto) {    \n    try {\n      const logBundle = await this.logBundleServices.createLogBundle(createLogBundleDto,);\n      return res.status(HttpStatus.CREATED).json({\n      message: 'recived',\n      log: logBundle,\n    });\n    } catch (e) {\n        res.status(HttpStatus.FORBIDDEN).json({\n          message: 'error',\n          log: e,\n        })\n    }}\n\n  @Get('/allLogs')\n  async getLogBundles(@Res() res) {\n    try{\n      const logBundle = await this.logBundleServices.getLogBundles();\n      return res.status(HttpStatus.OK).json({\n      logBundle: logBundle,\n      });\n    }\n    catch (e) {\n      res.status(HttpStatus.FORBIDDEN).json({\n        message: 'error',\n        log: e,\n      })\n  }}\n\n  @ApiParam( {name: 'startDate'} )\n  @ApiParam( {name: 'endDate'} )\n  @Get('/logBundlesByDateRange/:startDate/:endDate')\n  async logBundlesByDateRange(@Res() res, @Param('startDate') startDate, @Param('endDate') endDate) {\n  try{\n    const logBundle = await this.logBundleServices.getLogBundlesByDateRange(startDate,endDate);\n    return res.status(HttpStatus.OK).json({\n      logBundle: logBundle,\n    });\n  }\n  catch (e) {\n    res.status(HttpStatus.FORBIDDEN).json({\n      message: 'error',\n      log: e,\n    })\n  }}\n\n  @ApiParam( {name: 'logId'} )\n  @Get('/:logId')\n  async getBundle(@Res() res, @Param('logId') logId) {\n    try{\n      const logBundle = await this.logBundleServices.getLogBundle(logId);\n      if (!logBundle) throw new NotFoundException('Log bundle does not exist');\n      return res.status(HttpStatus.OK).json(logBundle);\n    }\n    catch (e) {\n      res.status(HttpStatus.FORBIDDEN).json({\n        message: 'error',\n        log: e,\n      })\n    }}\n \n\n  @ApiParam( {name: 'logId'} )\n  @Delete('/delete')\n  async deleteLogBundle(@Res() res, @Query('logId') logId) {\n\n    try{\n      const logBundleDeleted = await this.logBundleServices.deleteLogBundle(logId);\n      if(!logBundleDeleted) throw new NotFoundException('Log bundle does not exist');\n      return res.status(HttpStatus.OK).json({\n        message: 'recived',\n        logBundleDeleted: logBundleDeleted\n      });\n    }\n    catch (e) {\n      res.status(HttpStatus.FORBIDDEN).json({\n        message: 'error',\n        log: e,\n      })\n    }}\n\n  @ApiParam( {name: 'logId'} )\n  @Put('/updateLog')\n  async updateLogBundle(@Res() res,@Body()createLogBondleDto: LogBundleDto ,@Query('logId') logId) {\n    try{\n      const updatelogBundle = await this.logBundleServices.updateLogBundle(logId, createLogBondleDto);\n      if(!updatelogBundle) throw new NotFoundException('Log bundle does not exist');\n      return res.status(HttpStatus.OK).json({\n        message: 'recived',\n        updatelogBundle: updatelogBundle\n      });\n    }\n    catch (e) {\n      res.status(HttpStatus.FORBIDDEN).json({\n        message: 'error',\n        log: e,\n      })\n    }}\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BundleModule.html":{"url":"modules/BundleModule.html","title":"module - BundleModule","body":"\n                   \n\n\n\n\n    Modules\n    BundleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_BundleModule\n\n\n\ncluster_BundleModule_providers\n\n\n\n\nBundleService\n\nBundleService\n\n\n\nBundleModule\n\nBundleModule\n\nBundleModule -->\n\nBundleService->BundleModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/bundle/bundle.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BundleService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            BundleController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { BundleController } from './bundle.controller';\nimport { BundleService } from './bundle.service';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { LogBundleSchema } from './schema/logBundle.schema';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: 'bundle', schema: LogBundleSchema }]),\n  ],\n  controllers: [BundleController],\n  providers: [BundleService],\n})\nexport class BundleModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BundleService.html":{"url":"injectables/BundleService.html","title":"injectable - BundleService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BundleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/bundle/bundle.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createLogBundle\n                            \n                            \n                                    Async\n                                deleteLogBundle\n                            \n                            \n                                    Async\n                                getLogBundle\n                            \n                            \n                                    Async\n                                getLogBundles\n                            \n                            \n                                    Async\n                                getLogBundlesByDateRange\n                            \n                            \n                                    Async\n                                updateLogBundle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(bundleModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/bundle/bundle.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bundleModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createLogBundle\n                        \n                    \n                \n            \n            \n                \n                    \n                    createLogBundle(createLogBundleDto: LogBundleDto)\n                \n            \n\n\n            \n                \n                    Defined in src/bundle/bundle.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createLogBundleDto\n                                    \n                                                LogBundleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteLogBundle\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteLogBundle(logId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/bundle/bundle.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    logId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getLogBundle\n                        \n                    \n                \n            \n            \n                \n                    \n                    getLogBundle(logId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/bundle/bundle.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    logId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getLogBundles\n                        \n                    \n                \n            \n            \n                \n                    \n                    getLogBundles()\n                \n            \n\n\n            \n                \n                    Defined in src/bundle/bundle.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getLogBundlesByDateRange\n                        \n                    \n                \n            \n            \n                \n                    \n                    getLogBundlesByDateRange(startDate: string, endDate: string)\n                \n            \n\n\n            \n                \n                    Defined in src/bundle/bundle.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    startDate\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    endDate\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateLogBundle\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateLogBundle(logId: string, createLogBundleDto: LogBundleDto)\n                \n            \n\n\n            \n                \n                    Defined in src/bundle/bundle.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    logId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createLogBundleDto\n                                    \n                                                LogBundleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Model } from 'mongoose';\nimport { InjectModel } from '@nestjs/mongoose/dist/common';\n\nimport { LogBundle } from './interfaces/logBundle.interface';\nimport { LogBundleDto } from './dto/logBundle.dto';\n\n@Injectable()\nexport class BundleService {\n  constructor(\n    @InjectModel('bundle') private readonly bundleModel: Model,\n  ) {}\n\n  async getLogBundles(): Promise {\n    const logsBundle = await this.bundleModel.find();\n    return logsBundle;\n  }\n\n  async getLogBundlesByDateRange(startDate: string, endDate: string): Promise {\n    const logsBundle = await this.bundleModel.find({\n      date: { $gte: startDate, $lte: endDate }\n    });\n  \n    return logsBundle;\n  }\n\n  async getLogBundle(logId: string): Promise {\n    const logBundle = await this.bundleModel.findById(logId);\n    return logBundle;\n  }\n\n  async createLogBundle(createLogBundleDto: LogBundleDto): Promise {\n    const logbundle = await new this.bundleModel(createLogBundleDto);\n    return await logbundle.save();\n  }\n\n  async deleteLogBundle(logId: string): Promise {\n    const deletedLogBundle = await this.bundleModel.findByIdAndDelete(logId);\n    return deletedLogBundle;\n  }\n\n  async updateLogBundle(logId: string, createLogBundleDto: LogBundleDto,): Promise {\n    const updateLogBundle = await this.bundleModel.findByIdAndUpdate(\n      logId,\n      createLogBundleDto,\n      { new: true },\n    );\n    return updateLogBundle;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LogBundle.html":{"url":"interfaces/LogBundle.html","title":"interface - LogBundle","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LogBundle\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/bundle/interfaces/logBundle.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            bundle\n                                        \n                                \n                                \n                                        \n                                            date\n                                        \n                                \n                                \n                                        \n                                            destination\n                                        \n                                \n                                \n                                        \n                                            idServiceRequest\n                                        \n                                \n                                \n                                        \n                                            servicio\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bundle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bundle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        date:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        destination\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        destination:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idServiceRequest\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        idServiceRequest:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        servicio\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        servicio:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Document } from \"mongoose\";\n\nexport interface LogBundle extends Document {\n  date: string;\n  servicio:string;\n  destination: string;\n  idServiceRequest:string\n  bundle: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LogBundleDto.html":{"url":"classes/LogBundleDto.html","title":"class - LogBundleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LogBundleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/bundle/dto/logBundle.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                bundle\n                            \n                            \n                                    \n                                    \n                                    \n                                date\n                            \n                            \n                                    \n                                    \n                                    \n                                destination\n                            \n                            \n                                    \n                                    \n                                idServiceRequest\n                            \n                            \n                                    \n                                    \n                                    \n                                servicio\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        bundle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/bundle/dto/logBundle.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@Length(20)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/bundle/dto/logBundle.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        destination\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@Length(10, 20)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/bundle/dto/logBundle.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        idServiceRequest\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/bundle/dto/logBundle.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        servicio\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@Length(5, 15)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/bundle/dto/logBundle.dto.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty, Length } from 'class-validator';\n\n/* eslint-disable prettier/prettier */\nexport class LogBundleDto {\n    \n    @ApiProperty()\n    @IsNotEmpty()\n    @Length(20)\n    date: string;\n\n    @ApiProperty()\n    @IsNotEmpty()\n    @Length(5,15)\n    servicio:string;\n\n    @ApiProperty()\n    @IsNotEmpty()\n    @Length(10, 20)\n    destination: string;\n\n    @ApiProperty()\n    @IsNotEmpty()\n    idServiceRequest:string\n\n    @ApiProperty()\n    @IsNotEmpty()\n    bundle: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggerInterceptor.html":{"url":"injectables/LoggerInterceptor.html","title":"injectable - LoggerInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoggerInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/logger.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/utils/logger.interceptor.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { CallHandler, ExecutionContext, Injectable, NestInterceptor } from '@nestjs/common';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class LoggerInterceptor implements NestInterceptor {\n  intercept(context: ExecutionContext, next: CallHandler): Observable {\n    console.log('Interceptor validate');\n    return next.handle();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/bundle/bundle.controller.ts\n            \n            controller\n            BundleController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/bundle/bundle.service.ts\n            \n            injectable\n            BundleService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/bundle/dto/logBundle.dto.ts\n            \n            class\n            LogBundleDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/bundle/interfaces/logBundle.interface.ts\n            \n            interface\n            LogBundle\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/bundle/schema/logBundle.schema.ts\n            \n            variable\n            LogBundleSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/guards/application-guard.guard.ts\n            \n            guard\n            ApplicationGuardGuard\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/logger.interceptor.ts\n            \n            injectable\n            LoggerInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/mongoose : ^10.0.1\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/swagger : ^7.1.6\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            mongoose : ^7.4.1\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.8.1\n        \n            swagger-ui-express : ^5.0.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nAPI REST con NestJS y MongoDB\nEste es un proyecto de API REST creado con NestJS y utiliza MongoDB como base de datos. Permite crear, leer, actualizar y eliminar datos mediante endpoints HTTP. A continuación, se proporciona información sobre cómo configurar, ejecutar y probar la API.\nInstalación\nAntes de comenzar, asegúrate de tener instalado Node.js y npm en tu sistema. Luego, sigue estos pasos:\n\nClona este repositorio en tu máquina local.\nNavega al directorio del proyecto mongo-api.\nEjecuta npm install para instalar las dependencias necesarias.\n\nConfiguración\nEl archivo de configuración de la base de datos se encuentra en el archivo src/app.module.ts. Por defecto, la API está configurada para usar MongoDB. Asegúrate de tener una instancia de MongoDB en ejecución y configura las credenciales en este archivo si es necesario.\nScripts de npm\nA continuación se describen los scripts de npm disponibles para este proyecto:\n\nnpm run build: Compila el proyecto NestJS.\nnpm run format: Formatea el código del proyecto utilizando Prettier.\nnpm start: Inicia la API en modo de producción.\nnpm run start:dev: Inicia la API en modo de desarrollo con reinicio automático al detectar cambios.\nnpm run start:debug: Inicia la API en modo de depuración con reinicio automático al detectar cambios.\nnpm test: Ejecuta las pruebas utilizando Jest.\nnpm run test:watch: Ejecuta las pruebas en modo observador.\nnpm run test:cov: Ejecuta las pruebas y genera informes de cobertura.\nnpm run lint: Ejecuta ESLint para detectar y corregir problemas de estilo.\nnpm run test:e2e: Ejecuta pruebas end-to-end utilizando Jest y el archivo de configuración jest-e2e.json.\n\nDependencias principales\nLas siguientes son las dependencias principales utilizadas en este proyecto:\n\n@nestjs/common, @nestjs/core, @nestjs/mongoose, @nestjs/platform-express: Componentes principales de NestJS para la construcción de aplicaciones.\nmongoose: Librería para interactuar con MongoDB.\nrxjs: Librería para programación reactiva en JavaScript.\n\nDependencias de desarrollo\nLas siguientes son las dependencias utilizadas para desarrollo y pruebas:\n\n@nestjs/cli, @nestjs/schematics, @nestjs/testing: Herramientas y utilidades de NestJS para el desarrollo.\n@types/express, @types/jest, @types/node, @types/supertest: Tipos de TypeScript para paquetes externos utilizados en el proyecto.\n@typescript-eslint/eslint-plugin, @typescript-eslint/parser, eslint, eslint-config-prettier, eslint-plugin-prettier: Herramientas para el linting y formateo de código.\njest: Framework de pruebas.\nprettier: Herramienta de formateo de código.\nsupertest: Biblioteca para realizar pruebas HTTP en Node.js.\nts-jest, ts-loader, ts-node, tsconfig-paths, typescript: Herramientas y compilador de TypeScript.\n\nEjecución\nPara iniciar la API en modo de desarrollo, utiliza el siguiente comando:  \nnpm run start:devUna vez iniciada, la API estará disponible en http://localhost:3000.\nPruebas\nPara ejecutar las pruebas, utiliza el siguiente comando:\n  npm test\nDocumentación de la API\nLa documentación de la API, incluyendo los endpoints disponibles, los parámetros y las respuestas, se encuentra disponible en http://localhost:3000/docs cuando la API está en ejecución.\nLicencia\nEste proyecto no tiene licencia especificada actualmente (UNLICENSED).\nNotas\nRecuerda configurar adecuadamente las credenciales de MongoDB en el archivo src/app.module.ts antes de poner en producción la API.\n¡Disfruta desarrollando tu API REST con NestJS y MongoDB! Si tienes alguna pregunta, no dudes en ponerte en contacto con el autor del proyecto.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BundleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_BundleModule\n\n\n\ncluster_BundleModule_providers\n\n\n\n\nBundleModule\n\nBundleModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nBundleModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nBundleService\n\nBundleService\n\nBundleModule -->\n\nBundleService->BundleModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            LogBundleSchema   (src/.../logBundle.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    mongodb: {\n        user: 'indra', // Nombre de usuario de la base de datos MongoDB\n        password: 'jahgai4veith3ie2', // Contraseña del usuario\n        host: '172.20.6.73', // Dirección IP o nombre del host donde se encuentra la base de datos\n        database: 'hcc', // Nombre de la base de datos\n        port: 27017, // Puerto de la base de datos MongoDB (por defecto es 27017)\n    },\n    mongodbDev: {\n        user: 'indra', // Nombre de usuario de la base de datos MongoDB\n        password: 'jahgai4veith3ie2', // Contraseña del usuario\n        host: 'localhost', // Dirección IP o nombre del host donde se encuentra la base de datos\n        database: 'logBundle', // Nombre de la base de datos\n        port: 27020, // Puerto de la base de datos MongoDB (por defecto es 27017)\n    },\n    port :3000\n\n}\n                    \n                \n\n\n        \n    \n\n    src/bundle/schema/logBundle.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        LogBundleSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Schema({\n    date: {type: String, require:true},\n    servicio: {type: String, require:true},\n    destination: {type: String, require:true},\n    idServiceRequest: {type: String, require:true},\n    bundle: {type: String, require:true}\n})\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
